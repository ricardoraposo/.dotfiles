" Colorscheme generated by https://github.com/arcticlimer/djanho
set bg=dark
highlight clear

if exists("syntax_on")
    syntax reset
endif

let colors_name = "nightwolf"

function s:highlight(group, bg, fg, style)
  let gui = a:style == '' ? '' : 'gui=' . a:style
  let fg = a:fg == '' ? '' : 'guifg=' . a:fg
  let bg = a:bg == '' ? '' : 'guibg=' . a:bg
  exec 'hi ' . a:group . ' ' . bg . ' ' . fg  . ' ' . gui
endfunction

let s:Black = '#000000'
let s:Red = '#f05050'
let s:White = '#ffffff'
let s:Blue = '#00b1ff'
let s:LightPurple = '#dc8cff'
let s:DarkPurple = '#9696ff'
let s:Cyan = '#00dcdc'
let s:LightYellow = '#ffdc96'
let s:DarkYellow = '#ffb482'
let s:Green = '#aae682'
let s:LightRed = '#ff7878'
let s:Muted = '#c8c8c8'
let s:Color9 = '#647882'
let s:Color12 = '#969696'
let s:Color14 = '#141414'
let s:Color15 = '#161b10'
let s:Color16 = '#230c0b'
let s:Color17 = '#343434'
let s:Color18 = '#3c3c3c'
let s:Color19 = '#787878'

call s:highlight('Statement', '', s:DarkPurple, '')
call s:highlight('Error', s:Red, s:White, '')
call s:highlight('Type', '', s:Blue, '')
call s:highlight('Type', '', '', 'italic')
call s:highlight('Conditional', '', s:LightPurple, '')
call s:highlight('Conditional', '', s:DarkPurple, '')
call s:highlight('Repeat', '', s:DarkPurple, '')
call s:highlight('Function', '', s:Cyan, 'bold')
call s:highlight('Identifier', '', s:LightYellow, '')
call s:highlight('TSCharacter', '', s:LightYellow, '')
call s:highlight('String', '', s:Green, '')
call s:highlight('Operator', '', s:LightRed, '')
call s:highlight('Comment', '', s:Color9, 'italic')
call s:highlight('Number', '', s:DarkYellow, '')
call s:highlight('StatusLine', s:Color12, s:Black, '')
call s:highlight('WildMenu', s:Black, s:Muted, '')
call s:highlight('Pmenu', s:Black, s:Muted, '')
call s:highlight('PmenuSel', s:Muted, s:Color14, '')
call s:highlight('PmenuThumb', s:Black, s:Muted, '')
call s:highlight('DiffAdd', s:Color15, '', '')
call s:highlight('DiffDelete', s:Color16, '', '')
call s:highlight('Normal', s:Black, s:Muted, '')
call s:highlight('Visual', s:Color17, '', '')
call s:highlight('CursorLine', s:Color17, '', '')
call s:highlight('ColorColumn', s:Color17, '', '')
call s:highlight('SignColumn', s:Black, '', '')
call s:highlight('LineNr', '', s:Color18, '')
call s:highlight('TabLine', s:Black, s:Color19, '')
call s:highlight('TabLineSel', s:Muted, s:Color14, '')
call s:highlight('TabLineFill', s:Black, s:Color19, '')
call s:highlight('TSPunctDelimiter', '', s:Muted, '')

highlight! link TelescopeNormal Normal
highlight! link TSNamespace TSType
highlight! link TSPunctSpecial TSPunctDelimiter
highlight! link NonText Comment
highlight! link TSLabel Type
highlight! link TSParameterReference TSParameter
highlight! link TSKeyword Keyword
highlight! link TSType Type
highlight! link Repeat Conditional
highlight! link Whitespace Comment
highlight! link TSOperator Operator
highlight! link TSConstant Constant
highlight! link TSField Constant
highlight! link TSFloat Number
highlight! link TSConstBuiltin TSVariableBuiltin
highlight! link TSParameter Constant
highlight! link TSTag MyTag
highlight! link Folded Comment
highlight! link TSPunctBracket MyTag
highlight! link TSNumber Number
highlight! link Conditional Operator
highlight! link TSFunction Function
highlight! link CursorLineNr Identifier
highlight! link TSComment Comment
highlight! link TSConditional Conditional
highlight! link TSProperty TSField
highlight! link TSFuncMacro Macro
highlight! link TSRepeat Repeat
highlight! link Operator Keyword
highlight! link Macro Function
highlight! link TSString String
highlight! link TSTagDelimiter Type

" Treesitter groups

" TYPESCRIPT/TSX
" keyword
call s:highlight('@keyword.import.tsx', '', s:DarkPurple, '')
call s:highlight('@keyword.tsx', '', s:DarkPurple, '')
call s:highlight('@keyword.function.tsx', '', s:Blue, 'italic')
call s:highlight('@keyword.typescript', '', s:Blue, '')
call s:highlight('@keyword.operator.tsx', '', s:LightRed, '')
call s:highlight('@keyword.type.typescript', '', s:Blue, '')
call s:highlight('@keyword.coroutine.typescript', '', s:DarkPurple, 'italic')
call s:highlight('@keyword.repeat.tsx', '', s:LightRed, '')
call s:highlight('@keyword.repeat.typescript', '', s:LightRed, '')

" variable
call s:highlight('@variable', '', s:Muted, '')
call s:highlight('@variable.tsx', '', s:LightYellow, '')
call s:highlight('@variable.typescript', '', s:LightYellow, '')
call s:highlight('@variable.parameter.tsx', '', s:LightYellow, '')
call s:highlight('@variable.parameter.typescript', '', s:LightYellow, '')
call s:highlight('@variable.builtin.typescript', '', s:LightRed, '')

" type
call s:highlight('@type.tsx', '', s:LightPurple, '')
call s:highlight('@type.builtin.tsx', '', s:DarkPurple, '')
call s:highlight('@type.builtin.typescript', '', s:DarkPurple, '')
call s:highlight('@type.typescript', '', s:Cyan, '')

" boolean
call s:highlight('@boolean.tsx', '', s:LightRed, '')

" operator
call s:highlight('@operator.tsx', '', s:Muted, '')

" punctuation
call s:highlight('@punctuation.bracket.tsx', '', s:LightYellow, '')
call s:highlight('@punctuation.special.tsx', '', s:LightRed, '')

" constructor
call s:highlight('@constructor.tsx', '', s:DarkPurple, '')
call s:highlight('@constructor.typescript', '', s:Blue, '')

" string
call s:highlight('@string.escape.tsx', '', s:Green, '')
call s:highlight('@string.escape.typescript', '', s:Green, '')

" function
call s:highlight('@function.call.tsx', '', s:Cyan, 'italic')
call s:highlight('@function.method.call.tsx', '', s:Cyan, 'italic')
call s:highlight('@function.method.call.typescript', '', s:Cyan, 'italic')

" tag
call s:highlight('@tag.tsx', '', s:LightRed, '')
call s:highlight('@tag.builtin.tsx', '', s:LightRed, '')
call s:highlight('@tag.attribute.tsx', '', s:DarkPurple, '')
call s:highlight('@tag.delimiter.tsx', '', s:Muted, '')

" constants
call s:highlight('@constant.builtin.tsx', '', s:LightRed, '')
call s:highlight('@constant.builtin.typescript', '', s:LightRed, '')

" markup
call s:highlight('@markup.heading.1.tsx', '', s:Muted, '')

" Plugin specific
" NvimTree
call s:highlight('NvimTreeFolderName', '', s:Blue, '')
call s:highlight('NvimTreeOpenedFolderName', '', s:Cyan, '')

" Telescope
call s:highlight('TelescopeMatching', '', s:Blue, '')



" RUST

" variable
call s:highlight('@variable.rust', '', s:LightYellow, '')
call s:highlight('@variable.parameter.rust', '', s:LightYellow, '')

" keyword
call s:highlight('@keyword.rust', '', s:LightRed, '')
call s:highlight('@keyword.function.rust', '', s:LightRed, '')
call s:highlight('@keyword.conditional.rust', '', s:LightRed, '')
call s:highlight('@keyword.modifier.rust', '', s:LightRed, '')
call s:highlight('@keyword.repeat.rust', '', s:LightRed, '')
call s:highlight('@keyword.import.rust', '', s:LightRed, '')

" types
call s:highlight('@type.rust', '', s:DarkPurple, '')
call s:highlight('@type.builtin.rust', '', s:LightPurple, '')


" module
call s:highlight('@module.rust', '', s:LightPurple, '')

" operator
call s:highlight('@operator.rust', '', s:LightRed, '')

" constant
call s:highlight('@constant.builtin.rust', '', s:LightYellow, '')

" boolean
call s:highlight('@boolean.rust', '', s:LightRed, '')

" string
call s:highlight('@string.escape.rust', '', s:Green, '')
