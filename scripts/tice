#!/bin/bash

temp="/tmp/ticethingy"

timer() {
while true
do
  if [[ $(( SECOND / 10 )) -lt 1 ]]; then
    echo "ðŸ§¿  $MINUTE:0$SECOND" >> $temp
  else
    echo "ðŸ§¿  $MINUTE:$SECOND" >> $temp
  fi
  sleep 0.99078
  SECOND=$(( $SECOND - 1 ))
  if [[ $MINUTE -gt 0 && $SECOND -lt 0 ]]; then
    MINUTE=$(( $MINUTE - 1 ))
    SECOND=59
  fi

  [[ $MINUTE -eq 0 && $SECOND -lt 0 ]] && break
done
rm $temp
}

start() {
  if [[ "$1" == "hour" ]]; then
    MINUTE=$(( 60 - $(date +"%M" | sed 's/^[0]*//')))
    SECOND=$(( 60 - $(date +"%S" | sed 's/^[0]*//')))
  else
    MINUTEINPUT=$(echo $1 | tr '[:upper:]' '[:lower:]'| grep -o '[0-9]\+m' | grep -o '[0-9]*')
    SECONDINPUT=$(echo $1 | tr '[:upper:]' '[:lower:]'| grep -o '[0-9]\+s' | grep -o '[0-9]*')
    MINUTE=0
    SECOND=0

    if [ ! -z "$MINUTEINPUT" ]; then
      for min in ${MINUTEINPUT[@]}
      do
        MINUTE=$(expr $MINUTE + $min)
      done
    fi

    if [ ! -z "$SECONDINPUT" ]; then
      for min in ${SECONDINPUT[@]}
      do
        SECOND=$(expr $SECOND + $min)
      done
    fi

    if [[ $SECOND -ge 60 ]]; then
      MINUTE=$(( $MINUTE + $(( $SECOND / 60 ))))
      SECOND=$(( $SECOND % 60 ))
    fi
  fi

  timer & sleep 0.1 ; sed -i='' "1s/^/$!\n/" $temp
}

stop() {
  MYSELF=$(head -n 1 $temp)
  kill $MYSELF
  sleep 0.2
  rm $temp
}

show() {
  if test -f $temp;then
    echo $(tail -n 1 $temp)
  else
    echo ""
  fi
}

[[ -z "$@" ]] && show || "$@"

# Completion stuff
if [[ -n $COMP_LINE ]]; then
  printf "start\nstop\nshow"
  exit
fi

