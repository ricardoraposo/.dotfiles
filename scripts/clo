#!/bin/bash

CACHE=$([[ "$OSTYPE" == "darwin"* ]] && echo "$HOME/Library/Caches/clo" || echo "$HOME/.cache/clo" )
RED="#f14e32"
PINK="#FF00FF"

oi() {
  gum style --foreground $PINK \
    --border double \
    --border-foreground 116 \
    --padding "1 2" \
    --margin 1 "Oi, eu sou a Clo"
}

prompt() {
  color=$1
  text=$2
  gum style\
    --border normal --bold\
    --border-foreground 116 \
    --foreground "$color" "$text"
}

color_text() {
  color=$1
  text=$2
  gum style --foreground "$color" "$text"
}

create_var_folder() {
  prompt "$PINK" "Selecione o diret√≥rio de reposit√≥rios"
  while true; do
    color_text "116" "Utilize as setas para navegar entre diret√≥rios e Enter para selecionar"
    color_text "116" "Use seta para direita para acessar o diret√≥rio"
    color_text "116" "Use seta para esquerda para voltar"
    cd $HOME
    DIR=$(gum file --directory)
    [[ -z $DIR ]] && break
    if [[ -d "$HOME/$DIR" ]]
    then
      [[ ! -d $CACHE ]] && mkdir "$CACHE"
      echo "$HOME/$DIR" > "$CACHE/vars"
      color_text "116" "Caminho salvo üòÉ!!!"
      break
    else
      clear
      color_text "$RED" "Diret√≥rio inexistente ou nem diret√≥rio √©üôÄ Tente denovo!"
    fi
  done
}

add_name_var() {
  prompt $PINK "Qual seu nome? (Apenas dois nomes plisss)"
  while true; do
    NAME=$(gum input --placeholder "Insira aqui seu nome" | xargs)
    NUM=$( echo "$NAME" | wc -w )
    if [[ $NUM -gt 2 ]]; then
      color_text "$RED" "Eu disse pra por s√≥ dois nomes...."
    elif [[ $NUM -eq 0 ]]; then
      color_text "$RED" "N√£o vai nem me falar o nome ?"
    else
      NAME=$( echo "$NAME" | tr [:upper:] [:lower:] | tr " " "-")
      color_text 116 "Nome salvo üòÉ!!!"
      echo "$NAME" >> "$CACHE/vars"
      break
    fi
  done
}

check_url() {
  URL=$1
  [[ -z $URL ]] && color_text "$RED" "Se n√£o for pra passar um link pra que que me chamou ?" && exit 1
  git=$( echo "$URL" | grep -E "(github|gitlab|bitbucket)")
  ssh=$( echo "$URL" | grep "git@")
  if [[ -z $git ]]; then
    color_text "$RED" "Url inv√°lida. Favor inserir link para reposit√≥rio git."
  elif [[ -z $ssh ]]; then
    color_text "$RED" "√â necess√°rio que o link seja SSH"
  else
    break
  fi
}

format_folder_name() {
  FORMAT=$(echo "$URL" | sed "s/.*[0-9]-//;s/\..*//")
  if [[ -z $( echo $FORMAT | grep -E "exercise|project") ]]; then
    echo $FORMAT
  else
    echo $FORMAT | sed -E "s/^([^-]+)-//"
  fi
}

clone_project() {
  if [[ -d "$REPOS/$FOLDERNAME" ]]; then
    color_text "$RED" "Reposit√≥rio j√° existe üôâ"
    color_text "$RED" "Redirecionando..."
    cd "$REPOS/$FOLDERNAME"
    exec $SHELL
  else
    cd $REPOS && gum spin --title "Aguarde enquanto clonamos seu projeto ‚åõÔ∏è" git clone $URL $FOLDERNAME
    cd "$REPOS/$FOLDERNAME"
  fi
}

checkout_branch() {
  if gum confirm "Ja possui branch ?"; then
    if gum confirm "Gostaria de acess√°-la ?" ; then
      color_text "$PINK" "Selecione sua branch"
      BRANCH=$(git branch -a | grep -vE "HEAD|main" | sed "s/remotes\/origin\///g" | \
        gum filter --placeholder "Comece a digitar o nome de sua branch..." \
        --height 20 )
      git checkout $BRANCH
    else
      color_text "$PINK" "Ta bom ent√£o"
    fi
  else 
    if gum confirm "Gostaria de criar uma ?"; then
      NAME="$USER-$FOLDERNAME"
      if gum confirm "Pode ser $(color_text "$PINK" "$NAME") ?"; then
        git checkout -b $NAME
      else
        color_text "$PINK" "Ent√£o vai ser oque ?"
        NAME=$(gum input --placeholder "Nome da branch")
        git checkout -b $NAME
      fi
    else
      color_text "$PINK" "Fica sem ent√£o"
    fi
  fi
  gum confirm "Posso dar 'npm install ?'" && gum spin --title "Instalando depend√™ncias..." npm install
  exec $SHELL
}

set_vars() {
  create_var_folder
  add_name_var
}

check_vars() {
  if [[ -d $CACHE ]]; then
    FIRST=$(cat "$CACHE/vars" | head -1)
    SECOND=$(cat "$CACHE/vars" | tail -1 | tr "-" " ")
    echo "Nome: $SECOND"
    echo "Reposit√≥rio: $FIRST"
  fi
}

main() {
  clear
  REPOS=$(cat "$CACHE/vars" | head -1)
  USER=$(cat "$CACHE/vars" | tail -1)
  prompt $PINK "Por favor, insira o link do reposit√≥rio üöÄ"
  while true; do
    URL=$(gum input --prompt "Ôêò " --width 60 --placeholder "Nome do reposit√≥rio")
    [[ -z $URL ]] && color_text "$RED" "Se n√£o for pra passar um link pra que que me chamou ?" && exit 1
    git=$( echo "$URL" | grep -E "(github|gitlab|bitbucket)")
    ssh=$( echo "$URL" | grep "git@")
    if [[ -z $git ]]; then
      color_text "$RED" "Url inv√°lida. Favor inserir link para reposit√≥rio git."
    elif [[ -z $ssh ]]; then
      color_text "$RED" "√â necess√°rio que o link seja SSH"
    else
      break
    fi
  done

  FOLDERNAME=$(format_folder_name)
  prompt "$PINK" "Qual tipo de reposit√≥rio ?"
  TYPE=$(gum choose "Normal" "Bare")

  case $TYPE in
    Normal)
      clone_project
      checkout_branch
      ;;
    Bare)
      color_text "$PINK" "Ent√£o faz voc√™ pq eu n√£o sei fazer ainda n√£o" && exit 0
      ;;
  esac
}

case "$@" in
  -s | --set)
    clear && oi
    set_vars
    ;;
  --check)
    check_vars
    ;;
  *)
    clear && oi
    if [[ ! -d $CACHE ]]
    then
      set_vars
    fi
    main
    ;;
esac
